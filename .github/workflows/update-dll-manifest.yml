name: Update dll manifest

on:
  pull_request:
    types: [labeled]

jobs:
  renew:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    # Only if it's a PR from renovate and contains a certain label.
    if: github.event.sender.login == 'renovate[bot]' && contains( github.event.pull_request.labels.*.name, 'update dll manifest')

    steps:

    - run: echo ${{ github.event.pull_request.head.user.login }}

    # Only if the latest commit is by renovate itself.
    # (Ignore if others pushed a new commit).
    - uses: actions/github-script@v3
      id: match-commit
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const commit = (await github.git.getCommit({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.payload.pull_request.head.sha,
          })).data;
          return commit.author.name === 'Renovate Bot';

    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_TOKEN_EVE }}
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}
      if: ${{ steps.match-commit.outputs.result }}

    - run: git checkout --track origin/${{ github.event.pull_request.head.ref }}
      if: ${{ steps.match-commit.outputs.result }}

    - run: |
        git config --global user.name 'easyops-eve'
        git config --global user.email 'easyops-eve@users.noreply.github.com'
      if: ${{ steps.match-commit.outputs.result }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'
      if: ${{ steps.match-commit.outputs.result }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
      if: ${{ steps.match-commit.outputs.result }}

    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          node_modules
          */*/node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
      if: ${{ steps.match-commit.outputs.result }}

    - name: Build to update dll manifest
      run: |
        yarn install --frozen-lockfile
        yarn build
      env:
        UPDATE_DLL_MANIFEST: 'true'
      if: ${{ steps.match-commit.outputs.result }}

    - name: Git commit and push
      run: |
        git add -A
        'git commit -m "chore(): update dll manifest"'
        git push
