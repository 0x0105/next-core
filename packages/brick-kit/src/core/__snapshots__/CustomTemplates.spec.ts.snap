// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`expandCustomTemplate should expandCustomTemplate 1`] = `
Object {
  "brick": "steve-test.custom-template",
  "events": Object {
    "button.click": Object {
      "action": "console.log",
      "args": Array [
        "proxied",
        "\${EVENT}",
      ],
    },
  },
  "lifeCycle": Object {
    "useResolves": Array [
      Object {
        "args": Array [
          "HOST",
        ],
        "provider": "providers-of-cmdb\\\\.cmdb-object-api-get-detail",
        "transform": Object {
          "button": "@{name}",
        },
      },
    ],
  },
  "slots": Object {
    "": Object {
      "bricks": Array [
        Object {
          "brick": "basic-bricks.micro-view",
          "properties": Object {
            "pageTitle": "Testing Template",
          },
          "slots": Object {
            "content": Object {
              "bricks": Array [
                Object {
                  "brick": "basic-bricks.general-button",
                  "events": Object {
                    "general.button.click": Object {
                      "action": "console.log",
                      "args": Array [
                        "source",
                        "\${EVENT}",
                      ],
                    },
                  },
                  "properties": Object {
                    "buttonType": "dashed",
                  },
                  "slots": Object {},
                  Symbol(tpl.computedPropsFromProxy): Object {
                    "buttonType": "default",
                    "sharedPropOfButton": "shared",
                    "style": Object {
                      "display": "block",
                    },
                  },
                  Symbol(tpl.refForProxy): Object {},
                  Symbol(tpl.parentTemplate): undefined,
                },
                Object {
                  "brick": "basic-bricks.general-input",
                  "slots": Object {},
                  Symbol(tpl.computedPropsFromProxy): Object {
                    "sharedPropOfInput": "shared",
                  },
                  Symbol(tpl.refForProxy): Object {},
                  Symbol(tpl.parentTemplate): undefined,
                },
                Object {
                  "brick": "basic-bricks.general-link",
                  "slots": Object {},
                  Symbol(tpl.computedPropsFromProxy): Object {
                    "sharedPropOfLink": "linked:shared",
                  },
                  Symbol(tpl.refForProxy): Object {},
                  Symbol(tpl.parentTemplate): undefined,
                },
                Object {
                  "brick": "basic-bricks.brick-in-portal",
                  "portal": true,
                  "slots": Object {},
                  Symbol(tpl.computedPropsFromProxy): Object {},
                  Symbol(tpl.refForProxy): undefined,
                  Symbol(tpl.parentTemplate): Object {
                    "proxy": Object {
                      "events": Object {
                        "button.click": Object {
                          "ref": "button",
                          "refEvent": "general.button.click",
                        },
                      },
                      "methods": Object {
                        "tell": Object {
                          "ref": "button",
                          "refMethod": "tellStory",
                        },
                      },
                      "properties": Object {
                        "appendColumns": Object {
                          "$$mergeBase": Object {
                            "baseValue": Array [],
                            "mergeType": "array",
                            "proxies": Array [
                              [Circular],
                            ],
                          },
                          "$$reversedRef": "appendColumns",
                          "mergeMethod": "append",
                          "mergeProperty": "columns",
                          "mergeType": "array",
                          "ref": "micro-view",
                        },
                        "button": Object {
                          "$$reversedRef": "button",
                          "ref": "button",
                          "refProperty": "buttonName",
                        },
                        "isDanger": Object {
                          "$$reversedRef": "isDanger",
                          "ref": "button",
                          "refTransform": Object {
                            "buttonType": "<% DATA.isDanger ? 'danger' : 'default' %>",
                            "style": Object {
                              "display": "<% DATA.isDanger ? 'inline' : 'block' %>",
                            },
                          },
                        },
                        "noGap": Object {
                          "$$reversedRef": "noGap",
                          "ref": "micro-view",
                          "refProperty": "noGap",
                        },
                        "sharedProp": Object {
                          "$$reversedRef": "sharedProp",
                          "extraOneWayRefs": Array [
                            Object {
                              "$$reversedRef": "sharedProp",
                              "ref": "input",
                              "refProperty": "sharedPropOfInput",
                            },
                            Object {
                              "$$reversedRef": "sharedProp",
                              "ref": "link",
                              "refTransform": Object {
                                "sharedPropOfLink": "<% \`linked:\${DATA.sharedProp}\` %>",
                              },
                            },
                            Object {
                              "$$reversedRef": "sharedProp",
                              "ref": "micro-view",
                              "refProperty": "sharedPropOfMicroView",
                            },
                          ],
                          "ref": "button",
                          "refProperty": "sharedPropOfButton",
                        },
                      },
                      "slots": Object {
                        "extraContent": Object {
                          "$$reversedRef": "extraContent",
                          "ref": "micro-view",
                          "refSlot": "content",
                        },
                        "tools": Object {
                          "$$reversedRef": "tools",
                          "ref": "micro-view",
                          "refPosition": 0,
                          "refSlot": "toolbar",
                        },
                      },
                    },
                    "proxyRefs": Map {
                      "button" => Object {},
                      "input" => Object {},
                      "link" => Object {},
                      "micro-view" => Object {},
                    },
                  },
                },
                Object {
                  "brick": "div",
                  "properties": Object {
                    "textContent": "slotted extra content!",
                  },
                },
              ],
              "type": "bricks",
            },
            "toolbar": Object {
              "bricks": Array [
                Object {
                  "brick": "div",
                  "properties": Object {
                    "textContent": "slotted tools!",
                  },
                },
              ],
              "type": "bricks",
            },
          },
          Symbol(tpl.computedPropsFromProxy): Object {
            "columns": Array [],
            "noGap": "\${QUERY.gap|bool|not}",
            "sharedPropOfMicroView": "shared",
          },
          Symbol(tpl.refForProxy): Object {},
          Symbol(tpl.parentTemplate): undefined,
        },
      ],
      "type": "bricks",
    },
  },
}
`;

exports[`expandCustomTemplate should expandCustomTemplate 2`] = `
Object {
  "proxy": Object {
    "events": Object {
      "button.click": Object {
        "ref": "button",
        "refEvent": "general.button.click",
      },
    },
    "methods": Object {
      "tell": Object {
        "ref": "button",
        "refMethod": "tellStory",
      },
    },
    "properties": Object {
      "appendColumns": Object {
        "$$mergeBase": Object {
          "baseValue": Array [],
          "mergeType": "array",
          "proxies": Array [
            [Circular],
          ],
        },
        "$$reversedRef": "appendColumns",
        "mergeMethod": "append",
        "mergeProperty": "columns",
        "mergeType": "array",
        "ref": "micro-view",
      },
      "button": Object {
        "$$reversedRef": "button",
        "ref": "button",
        "refProperty": "buttonName",
      },
      "isDanger": Object {
        "$$reversedRef": "isDanger",
        "ref": "button",
        "refTransform": Object {
          "buttonType": "<% DATA.isDanger ? 'danger' : 'default' %>",
          "style": Object {
            "display": "<% DATA.isDanger ? 'inline' : 'block' %>",
          },
        },
      },
      "noGap": Object {
        "$$reversedRef": "noGap",
        "ref": "micro-view",
        "refProperty": "noGap",
      },
      "sharedProp": Object {
        "$$reversedRef": "sharedProp",
        "extraOneWayRefs": Array [
          Object {
            "$$reversedRef": "sharedProp",
            "ref": "input",
            "refProperty": "sharedPropOfInput",
          },
          Object {
            "$$reversedRef": "sharedProp",
            "ref": "link",
            "refTransform": Object {
              "sharedPropOfLink": "<% \`linked:\${DATA.sharedProp}\` %>",
            },
          },
          Object {
            "$$reversedRef": "sharedProp",
            "ref": "micro-view",
            "refProperty": "sharedPropOfMicroView",
          },
        ],
        "ref": "button",
        "refProperty": "sharedPropOfButton",
      },
    },
    "slots": Object {
      "extraContent": Object {
        "$$reversedRef": "extraContent",
        "ref": "micro-view",
        "refSlot": "content",
      },
      "tools": Object {
        "$$reversedRef": "tools",
        "ref": "micro-view",
        "refPosition": 0,
        "refSlot": "toolbar",
      },
    },
  },
  "proxyRefs": Map {
    "button" => Object {},
    "input" => Object {},
    "link" => Object {},
    "micro-view" => Object {},
  },
}
`;

exports[`expandCustomTemplate should work if proxy is empty 1`] = `
Object {
  "brick": "steve-test.custom-template-no-proxy",
  "events": Object {},
  "slots": Object {
    "": Object {
      "bricks": Array [
        Object {
          "brick": "basic-bricks.micro-view",
          "slots": Object {},
          Symbol(tpl.computedPropsFromProxy): Object {},
          Symbol(tpl.refForProxy): undefined,
          Symbol(tpl.parentTemplate): undefined,
        },
      ],
      "type": "bricks",
    },
  },
}
`;

exports[`expandCustomTemplate should work if proxy is empty 2`] = `
Object {
  "proxy": undefined,
  "proxyRefs": Map {},
}
`;
